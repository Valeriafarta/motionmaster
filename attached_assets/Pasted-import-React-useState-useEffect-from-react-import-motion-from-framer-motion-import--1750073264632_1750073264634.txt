import React, { useState, useEffect } from "react";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar";
import html2canvas from "html2canvas";

const InstructionCarousel = () => {
  const steps = [
    "–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É —Å—Ç–∞—Ä—Ç–∞",
    "–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π —Å—É–º–º—É",
    "–û—Ç–º–µ—á–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å",
    "–°–æ—Ö—Ä–∞–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–æ–¥–µ–ª–∏—Å—å –≤ —Å—Ç–æ—Ä–∏—Å!",
  ];
  const [current, setCurrent] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrent((prev) => (prev + 1) % steps.length);
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  return (
    <motion.div
      className="text-xl font-bold text-center my-4"
      initial={{ opacity: 0, y: -10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      {steps[current]}
    </motion.div>
  );
};

const generateWeeks = () => Array.from({ length: 52 }, (_, i) => i + 1);

export default function WealthTracker() {
  const [startDate, setStartDate] = useState(null);
  const [completed, setCompleted] = useState(() => {
    const saved = localStorage.getItem("wealth-weeks");
    return saved ? JSON.parse(saved) : [];
  });

  useEffect(() => {
    localStorage.setItem("wealth-weeks", JSON.stringify(completed));
  }, [completed]);

  const toggleWeek = (week) => {
    setCompleted((prev) =>
      prev.includes(week) ? prev.filter((w) => w !== week) : [...prev, week]
    );
  };

  const shareProgress = () => {
    if (navigator.share) {
      navigator.share({
        title: "–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å 52 –Ω–µ–¥–µ–ª–∏ –±–æ–≥–∞—Ç—Å—Ç–≤–∞",
        text: `–Ø —É–∂–µ –ø—Ä–æ—à–ª–∞ ${completed.length} –∏–∑ 52 –Ω–µ–¥–µ–ª—å!`,
        url: window.location.href,
      });
    } else {
      alert("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö");
    }
  };

  const saveImage = () => {
    const target = document.getElementById("progress-shot");
    if (target) {
      html2canvas(target).then((canvas) => {
        const link = document.createElement("a");
        link.download = "wealth-progress.png";
        link.href = canvas.toDataURL();
        link.click();
      });
    }
  };

  return (
    <div className="p-4 max-w-3xl mx-auto">
      <InstructionCarousel />

      <motion.div
        className="mb-4"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.3 }}
      >
        <h2 className="text-lg font-semibold text-center mb-2">
          –í—ã–±–µ—Ä–∏ –¥–∞—Ç—É —Å—Ç–∞—Ä—Ç–∞
        </h2>
        <Calendar mode="single" selected={startDate} onSelect={setStartDate} />
      </motion.div>

      <div id="progress-shot">
        <h2 className="text-lg font-semibold text-center my-4">
          –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å ({completed.length}/52)
        </h2>
        <motion.div
          className="grid grid-cols-4 sm:grid-cols-6 gap-2"
          initial="hidden"
          animate="visible"
          variants={{
            hidden: { opacity: 0 },
            visible: {
              opacity: 1,
              transition: { staggerChildren: 0.03 },
            },
          }}
        >
          {generateWeeks().map((week) => (
            <motion.div
              key={week}
              variants={{
                hidden: { opacity: 0, scale: 0.9 },
                visible: { opacity: 1, scale: 1 },
              }}
              className={`p-2 rounded-xl text-center cursor-pointer text-sm font-medium border transition-all duration-300 shadow-md hover:shadow-lg ${completed.includes(week) ? "bg-pink-600 text-white" : "bg-white text-gray-700"}`}
              onClick={() => toggleWeek(week)}
            >
              {week}
            </motion.div>
          ))}
        </motion.div>
      </div>

      <div className="flex gap-4 justify-center mt-6">
        <Button onClick={saveImage}>üì∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</Button>
        <Button onClick={shareProgress}>üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è</Button>
      </div>
    </div>
  );
}